context: context,
        builder: (BuildContext context) {
          return AlertDialog(
            contentPadding: EdgeInsets.zero,
            content: Stack(
              clipBehavior: Clip.none,
              children: <Widget>[
                Positioned(
                  right: -15.0,
                  top: -15.0,
                  child: InkResponse(
                    onTap: () {
                      Navigator.of(context).pop();
                    },
                    child: const CircleAvatar(
                      radius: 12,
                      child: Icon(
                        Icons.close,
                        size: 18,
                      ),
                      backgroundColor: Colors.white,
                    ),
                  ),
                ),
                Form(
                  key: _formKey,
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    children: <Widget>[
                      Container(
                        height: 40.0,
                        width: MediaQuery.of(context).size.width,
                        decoration: BoxDecoration(
                            color: Colors.indigo,
                            border: Border(
                                bottom: BorderSide(
                                    color: Colors.grey.withOpacity(0.3)))),
                        child: const Center(
                            child: Text("Create an account",
                                style: TextStyle(
                                    color: Colors.white,
                                    fontWeight: FontWeight.w700,
                                    fontSize: 20,
                                    fontFamily: "Helvetica"))),
                      ),
                      Padding(
                        padding: const EdgeInsets.all(20.0),
                        child: Container(
                            decoration: BoxDecoration(
                                border: Border.all(
                                    color: Colors.grey.withOpacity(0.2))),
                            child: Row(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Expanded(
                                  child: Column(
                                    children: [
                                      TextFormField(
                                        controller: nameText,
                                        decoration: const InputDecoration(
                                            hintText: "Name",
                                            contentPadding:
                                                EdgeInsets.only(left: 20),
                                            border: InputBorder.none,
                                            focusedBorder: InputBorder.none,
                                            errorBorder: InputBorder.none,
                                            hintStyle: TextStyle(
                                                color: Colors.black26,
                                                fontSize: 18,
                                                fontWeight: FontWeight.w500)),
                                      ),
                                      TextFormField(
                                        controller: surNameText,
                                        decoration: const InputDecoration(
                                            hintText: "Surname",
                                            contentPadding:
                                                EdgeInsets.only(left: 20),
                                            border: InputBorder.none,
                                            focusedBorder: InputBorder.none,
                                            errorBorder: InputBorder.none,
                                            hintStyle: TextStyle(
                                                color: Colors.black26,
                                                fontSize: 18,
                                                fontWeight: FontWeight.w500)),
                                      ),
                                      TextFormField(
                                          controller: birtDateText,
                                          decoration: const InputDecoration(
                                              hintText: "Date of birth",
                                              contentPadding:
                                                  EdgeInsets.only(left: 20),
                                              border: InputBorder.none,
                                              focusedBorder: InputBorder.none,
                                              errorBorder: InputBorder.none,
                                              hintStyle: TextStyle(
                                                  color: Colors.black26,
                                                  fontSize: 18,
                                                  fontWeight: FontWeight.w500)),
                                          onSaved: (value) {},
                                          validator: (value) {
                                            if (value == null ||
                                                value.isEmpty) {
                                              return 'Please enter date.';
                                            }
                                            return null;
                                          },
                                          onTap: () async {
                                            DateTime? date = DateTime(1900);
                                            FocusScope.of(context)
                                                .requestFocus(FocusNode());

                                            date = await showDatePicker(
                                                context: context,
                                                initialDate: DateTime.now(),
                                                firstDate: DateTime(1900),
                                                lastDate: DateTime(2100));
                                            String formattedDate =
                                                DateFormat('dd-MM-yyyy')
                                                    .format(date!)
                                                    .toString();
                                            birtDateText.text =
                                                formattedDate.toString();
                                          }),
                                      TextFormField(
                                        controller: emailText,
                                        decoration: const InputDecoration(
                                            hintText: "E-mail adress",
                                            contentPadding:
                                                EdgeInsets.only(left: 20),
                                            border: InputBorder.none,
                                            focusedBorder: InputBorder.none,
                                            errorBorder: InputBorder.none,
                                            hintStyle: TextStyle(
                                                color: Colors.black26,
                                                fontSize: 18,
                                                fontWeight: FontWeight.w500)),
                                      ),
                                      TextFormField(
                                        controller: passwordText,
                                        decoration: const InputDecoration(
                                            hintText: "Password",
                                            contentPadding:
                                                EdgeInsets.only(left: 20),
                                            border: InputBorder.none,
                                            focusedBorder: InputBorder.none,
                                            errorBorder: InputBorder.none,
                                            hintStyle: TextStyle(
                                                color: Colors.black26,
                                                fontSize: 18,
                                                fontWeight: FontWeight.w500)),
                                      ),
                                    ],
                                  ),
                                )
                              ],
                            )),
                      ),
                      Padding(
                        padding: const EdgeInsets.all(20.0),
                        child: ElevatedButton(
                          child: SizedBox(
                            width: MediaQuery.of(context).size.width,
                            height: 60,
                            child: const Center(
                                child: Text(
                              "Submit",
                              style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 20,
                                  fontWeight: FontWeight.w600),
                            )),
                          ),
                          onPressed: () {
                            signIn();
                          },
                        ),
                      )
                    ],
                  ),
                ),
              ],
            ),
          );
        }


             Container(
                  alignment: Alignment.center,
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      Column(
                        children: [
                          Text("Male"),
                          Radio(
                              value: "Male",
                              groupValue: gender,
                              onChanged: (value) {
                                setState(() {
                                  gender = value.toString();
                                });
                              }),
                        ],
                      ),
                      Column(
                        children: [
                          Text("Female"),
                          Radio(
                              value: "Female",
                              groupValue: gender,
                              onChanged: (value) {
                                setState(() {
                                  gender = value.toString();
                                });
                              }),
                        ],
                      ),
                      Column(
                        children: [
                          Text("ibne"),
                          Radio(
                              value: "Top",
                              groupValue: gender,
                              onChanged: (value) {
                                setState(() {
                                  gender = value.toString();
                                });
                              }),
                        ],
                      ),
                      Column(
                        children: [
                          Text("Lezoş"),
                          Radio(
                              value: "Top",
                              groupValue: gender,
                              onChanged: (value) {
                                setState(() {
                                  gender = value.toString();
                                });
                              }),
                        ],
                      )
                    ],
                  ),
                ),



                 onPressed: () async {
            if (_key.currentState!.validate()) {
              try {
                signUp().then((value) => ProfileScreen());
              } on FirebaseAuthException catch (error) {
                errorMessage = error.message!;
              }
              setState(() {});
            }
          },


                    ),
                    ),



          ListTileTheme(
  contentPadding: EdgeInsets.only(right: 20.0),
  child: CheckboxListTile(
    controlAffinity: ListTileControlAffinity.leading,
    value: false,
    onChanged: (value) {   isCheck = !isCheck;
                            setState(() {});},
    title: Text(
      "Remember me"
    ),
  ),
),
        


         Container(
                color: Colors.black,
                child: Text(
                  errorMessage,
                  style: const TextStyle(color: Colors.red),
                )),